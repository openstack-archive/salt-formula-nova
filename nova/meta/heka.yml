log_collector:
  decoder:
    openstack:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/openstack_log.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
    {%- if pillar.nova.compute is defined %}
    nova_libvirt:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/libvirt_log.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
    {%- endif %}
  splitter:
    openstack:
      engine: token
      delimiter: '\n'
  input:
    nova_log_stream:
      engine: logstreamer
      log_directory: "/var/log/nova"
      file_match: '(?P<Service>.+)\.log\.?(?P<Seq>\d*)$'
      differentiator: ['nova', '_', 'Service']
      priority: ["^Seq"]
      decoder: "openstack_decoder"
      splitter: "openstack_splitter"
    {%- if pillar.nova.compute is defined %}
    libvirt_log_stream:
      engine: logstreamer
      log_directory: "/var/log/libvirt"
      file_match: 'libvirtd.log'
      differentiator: ['libvirt']
      decoder: "libvirt_decoder"
      splitter: "TokenSplitter"
    {%- endif %}
metric_collector:
  trigger:
    {%- if pillar.nova.compute is defined %}
    nova_free_vcpu_warning:
      description: 'There is no VCPU available for new instances.'
      severity: warning
      no_data_policy: skip # the metric is only collected from the aggregator node
      rules:
      - metric: openstack_nova_total_free_vcpus
        relational_operator: '=='
        threshold: 0
        window: 60
        periods: 0
        function: max
    nova_free_memory_warning:
      description: 'There is no memory available for new instances.'
      severity: warning
      no_data_policy: skip  # the metric is only collected from the aggregator node
      rules:
      - metric: openstack_nova_total_free_ram
        relational_operator: '=='
        threshold: 0
        window: 60
        periods: 0
        function: max
    {%- endif %}
    {%- if pillar.nova.controller is defined %}
    nova_api_local_endpoint:
      description: 'Nova API is locally down.'
      severity: down
      rules:
      - metric: openstack_check_local_api
        dimension:
          service: 'nova-api'
        relational_operator: '=='
        threshold: 0
        window: 60
        periods: 0
        function: last
    {%- endif %}
  alarm:
    {%- if pillar.nova.compute is defined %}
    nova_compute_free_memory:
      notifications: False
      alerting: True
      triggers:
      - nova_free_memory_warning
      dimension:
        node_role: compute
        logical_name: nova-free-memory
    nova_compute_free_vcpu:
      notifications: False
      alerting: True
      triggers:
      - nova_free_vcpu_warning
      dimension:
        node_role: compute
        logical_name: nova-free-vcpu
    {%- endif %}
    {%- if pillar.nova.controller is defined %}
    nova_api_endpoint:
      enable_notification: False
      activate_alerting: True
      triggers:
      - nova_api_local_endpoint
      dimension:
        node_role: control
        logical_name: endpoint
    {%- endif %}
